var LIVE2DCUBISMPIXI,__extends=this&&this.__extends||function(){var s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};return function(e,t){function r(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}}();!function(e){var c,i=(c=PIXI.Container,__extends(a,c),Object.defineProperty(a.prototype,"parameters",{get:function(){return this._coreModel.parameters},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"parts",{get:function(){return this._coreModel.parts},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"drawables",{get:function(){return this._coreModel.drawables},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"canvasinfo",{get:function(){return this._coreModel.canvasinfo},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"textures",{get:function(){return this._textures},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"animator",{get:function(){return this._animator},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"userData",{get:function(){return this._userData},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"meshes",{get:function(){return this._meshes},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"masks",{get:function(){return this._maskSpriteContainer},enumerable:!0,configurable:!0}),Object.defineProperty(a.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),a.prototype.update=function(e){var r=this,e=.016*e;this._animator.updateAndEvaluate(e),this._physicsRig&&this._physicsRig.updateAndEvaluate(e),this._coreModel.update();for(var t=!1,s=0;s<this._meshes.length;++s)this._meshes[s].alpha=this._coreModel.drawables.opacities[s],this._meshes[s].visible=Live2DCubismCore.Utils.hasIsVisibleBit(this._coreModel.drawables.dynamicFlags[s]),Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(this._coreModel.drawables.dynamicFlags[s])&&(this._meshes[s].vertices=this._coreModel.drawables.vertexPositions[s],this._meshes[s].dirtyVertex=!0),Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(this._coreModel.drawables.dynamicFlags[s])&&(t=!0);t&&this.children.sort(function(e,t){e=r._meshes.indexOf(e),t=r._meshes.indexOf(t);return r._coreModel.drawables.renderOrders[e]-r._coreModel.drawables.renderOrders[t]}),this._coreModel.drawables.resetDynamicFlags()},a.prototype.destroy=function(e){null!=this._coreModel&&this._coreModel.release(),c.prototype.destroy.call(this,e),this.masks.destroy(),this._meshes.forEach(function(e){e.destroy()}),1!=e&&!e.texture||this._textures.forEach(function(e){e.destroy()})},a.prototype.getModelMeshById=function(e){if(null==this._meshes)return null;for(var t=0,r=this._meshes;t<r.length;t++){var s=r[t];if(s.name===e)return s}return null},a.prototype.addParameterValueById=function(e,t){e=this._coreModel.parameters.ids.indexOf(e);-1!=e&&(this._coreModel.parameters.values[e]=this._coreModel.parameters.values[e]+t)},a._create=function(e,t,r,s,i,o){o=new a(e,t,r,s=void 0===s?null:s,i=void 0===i?null:i,o=void 0===o?null:o);return o.isValid?o:(o.destroy(),null)},Object.defineProperty(a.prototype,"isValid",{get:function(){return null!=this._coreModel},enumerable:!0,configurable:!0}),a);function a(e,t,r,s,i,o){var a=c.call(this)||this;if(a._coreModel=e,a._textures=t,a._animator=r,a._physicsRig=s,a._userData=i,a._groups=o,a._animator.groups=a._groups,null==a._coreModel)return a;a._meshes=new Array(a._coreModel.drawables.ids.length);for(var n=0;n<a._meshes.length;++n){for(var l,u=a._coreModel.drawables.vertexUvs[n].slice(0,a._coreModel.drawables.vertexUvs[n].length),d=1;d<u.length;d+=2)u[d]=1-u[d];a._meshes[n]=new m(t[a._coreModel.drawables.textureIndices[n]],a._coreModel.drawables.vertexPositions[n],u,a._coreModel.drawables.indices[n],PIXI.DRAW_MODES.TRIANGLES),a._meshes[n].name=a._coreModel.drawables.ids[n],a._meshes[n].scale.y*=-1,a._meshes[n].isCulling=!Live2DCubismCore.Utils.hasIsDoubleSidedBit(a._coreModel.drawables.constantFlags[n]),Live2DCubismCore.Utils.hasBlendAdditiveBit(a._coreModel.drawables.constantFlags[n])?0<a._coreModel.drawables.maskCounts[n]?((l=new PIXI.Filter).blendMode=PIXI.BLEND_MODES.ADD,a._meshes[n].filters=[l]):a._meshes[n].blendMode=PIXI.BLEND_MODES.ADD:Live2DCubismCore.Utils.hasBlendMultiplicativeBit(a._coreModel.drawables.constantFlags[n])&&(0<a._coreModel.drawables.maskCounts[n]?((l=new PIXI.Filter).blendMode=PIXI.BLEND_MODES.MULTIPLY,a._meshes[n].filters=[l]):a._meshes[n].blendMode=PIXI.BLEND_MODES.MULTIPLY),a.addChild(a._meshes[n])}return a._maskSpriteContainer=new _(e,a),a}e.Model=i;var h,_=(h=PIXI.Container,__extends(t,h),Object.defineProperty(t.prototype,"maskSprites",{get:function(){return this._maskSprites},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maskMeshes",{get:function(){return this._maskMeshContainers},enumerable:!0,configurable:!0}),t.prototype.destroy=function(e){this._maskSprites.forEach(function(e){e.destroy()}),this._maskTextures.forEach(function(e){e.destroy()}),this._maskMeshContainers.forEach(function(e){e.destroy()}),this._maskShader=null},t.prototype.update=function(e){for(var t=0;t<this._maskSprites.length;++t)e.render(this._maskMeshContainers[t],this._maskTextures[t],!0,null,!1)},t.prototype.resize=function(e,t){for(var r=0;r<this._maskTextures.length;++r)this._maskTextures[r].resize(e,t,!1)},t);function t(e,t){var r=h.call(this)||this;r._maskShaderVertSrc=new String("\n            attribute vec2 aVertexPosition;\n            attribute vec2 aTextureCoord;\n            uniform mat3 projectionMatrix;\n            varying vec2 vTextureCoord;\n            void main(void){\n                gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n                vTextureCoord = aTextureCoord;\n            }\n            "),r._maskShaderFragSrc=new String("\n            varying vec2 vTextureCoord;\n            uniform sampler2D uSampler;\n            void main(void){\n                vec4 c = texture2D(uSampler, vTextureCoord);\n                c.r = c.a;\n                c.g = 0.0;\n                c.b = 0.0;\n                gl_FragColor = c;\n            }\n            "),r._maskShader=new PIXI.Filter(r._maskShaderVertSrc.toString(),r._maskShaderFragSrc.toString());var s=e.drawables.maskCounts,i=e.drawables.masks;r._maskMeshContainers=new Array,r._maskTextures=new Array,r._maskSprites=new Array;for(var o=0;o<t.meshes.length;++o)if(0<s[o]){for(var a=new PIXI.Container,n=0;n<i[o].length;++n){var l,u=e.drawables.masks[o][n];u<0||((l=new m(t.meshes[u].texture,t.meshes[u].vertices,t.meshes[u].uvs,t.meshes[u].indices,PIXI.DRAW_MODES.TRIANGLES)).name=t.meshes[u].name,l.transform=t.meshes[u].transform,l.worldTransform=t.meshes[u].worldTransform,l.localTransform=t.meshes[u].localTransform,l.isCulling=t.meshes[u].isCulling,l.isMaskMesh=!0,l.filters=[r._maskShader],a.addChild(l))}a.transform=t.transform,a.worldTransform=t.worldTransform,a.localTransform=t.localTransform,r._maskMeshContainers.push(a);var d=PIXI.RenderTexture.create(0,0);r._maskTextures.push(d);d=new PIXI.Sprite(d);r._maskSprites.push(d),r.addChild(d),t.meshes[o].mask=d}return r}e.MaskSpriteContainer=_;var r=(s.prototype.setMoc=function(e){return this._moc=e,this},s.prototype.setTimeScale=function(e){return this._timeScale=e,this},s.prototype.setPhysics3Json=function(e){return this._physicsRigBuilder||(this._physicsRigBuilder=new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder),this._physicsRigBuilder.setPhysics3Json(e),this},s.prototype.setUserData3Json=function(e){return this._userDataBuilder||(this._userDataBuilder=new LIVE2DCUBISMFRAMEWORK.UserDataBuilder),this._userDataBuilder.setUserData3Json(e),this},s.prototype.addTexture=function(e,t){return this._textures.splice(e,0,t),this},s.prototype.addAnimatorLayer=function(e,t,r){return void 0===t&&(t=LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE),this._animatorBuilder.addLayer(e,t,r=void 0===r?1:r),this},s.prototype.addGroups=function(e){return this._groups=e,this},s.prototype.buildFromModel3Json=function(t,e,i){var o=this,r=e.url,s=r.substring(0,r.lastIndexOf("/")+1),a=0;void 0!==e.data.FileReferences.Moc&&t.add("moc",s+e.data.FileReferences.Moc,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER}),void 0!==e.data.FileReferences.Textures&&e.data.FileReferences.Textures.forEach(function(e){t.add("texture"+a,s+e),a++}),void 0!==e.data.FileReferences.Physics&&t.add("physics",s+e.data.FileReferences.Physics,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),void 0!==e.data.FileReferences.UserData&&t.add("userdata",s+e.data.FileReferences.UserData,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),e.data.Groups,this._groups=LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(e.data),t.load(function(e,t){if(void 0!==t.moc&&o.setMoc(Live2DCubismCore.Moc.fromArrayBuffer(t.moc.data)),void 0!==t.texture0)for(var r=0;r<a;r++)o.addTexture(r,t["texture"+r].texture);void 0!==t.physics&&o.setPhysics3Json(t.physics.data),void 0!==t.userdata&&o.setUserData3Json(t.userdata.data);var s=o.build();i(s)})},s.prototype.build=function(){var e=Live2DCubismCore.Model.fromMoc(this._moc);if(null==e)return null;var t=this._animatorBuilder.setTarget(e).setTimeScale(this._timeScale).build(),r=null;this._physicsRigBuilder&&(r=this._physicsRigBuilder.setTarget(e).setTimeScale(this._timeScale).build());var s=null;return this._userDataBuilder&&(s=this._userDataBuilder.setTarget(e).build()),i._create(e,this._textures,t,r,s,this._groups)},s);function s(){this._textures=new Array,this._timeScale=1,this._animatorBuilder=new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder}e.ModelBuilder=r;var o,m=(o=PIXI.mesh.Mesh,__extends(n,o),n.prototype._renderWebGL=function(e){!0===this.isMaskMesh?e.state.setFrontFace(1):e.state.setFrontFace(0),!0===this.isCulling?e.state.setCullFace(1):e.state.setCullFace(0),o.prototype._renderWebGL.call(this,e),e.state.setFrontFace(0)},n);function n(){var e=null!==o&&o.apply(this,arguments)||this;return e.isCulling=!1,e.isMaskMesh=!1,e}e.CubismMesh=m}(LIVE2DCUBISMPIXI=LIVE2DCUBISMPIXI||{});